override:
  # Run only against instances in a specific region, for testing
  test_region_override:
    - us-east-1
    - us-east-2

  # Run only against instances matching specific tags
  test_filter:
      - Name: tag:aws_cleaner/filter
        Values:
          - justin
      # - Name: tag:Name
      #   Values:
      #     - stop_future_notification_1
      #     - stop_future_notification_2
      #     - stop_future_notification_3

slack:
  channel_key: channel_id
  token_secret_key: token
  token_secret_name: justin/slack_token
  token_secret_region: us-east-1
  chat_post_message_endpoint: https://slack.com/api/chat.postMessage
  user_lookup_endpoint: https://slack.com/api/users.lookupByEmail

# general:
#   max_stop_days: 62
#   default_stop_days: 31
#   max_terminate_days: 62
#   default_terminate_days: 31

tags:
  t_email: email
  t_name: Name
  t_owner_email: owner_email
  t_divvy_owner: divvy_owner
  t_divvy_last_modified_by: divvy_last_modified_by
  # t_autoscaling_group: aws:autoscaling:groupName
  # t_exception: aws_cleaner/cleanup_exception
  # t_stop_date: aws_cleaner/stop_date
  # t_stop_logs: aws_cleaner/stop_notification_log
  # t_terminate_date: aws_cleaner/terminate_date
  # t_terminate_logs: aws_cleaner/terminate_notification_log

  notifications:
    # Important: Notifications will be desc sorted by value (days)
    aws_cleaner/notifications/1: 15
    aws_cleaner/notifications/2: 7
    aws_cleaner/notifications/3: 2

instances:
  ec2:
    exception_tags:
    - aws_cleaner/cleanup_exception
    - aws:autoscaling:groupName
    states:
      running:
        action: "stop"
        default_days: 31
        max_days: 62
        action_tag: aws_cleaner/stop_date
        action_log_tag: aws_cleaner/stop_notification_log
        next_state: "stopped"

        # This is not currently used
        notifications:
          aws_cleaner/notifications/1: 15
          aws_cleaner/notifications/2: 7
          aws_cleaner/notifications/3: 2

      stopped:
        action: "terminate"
        default_days: 31
        max_days: 62
        action_tag: aws_cleaner/terminate_date
        action_log_tag: aws_cleaner/terminate_notification_log
        # next_state: null

        # This is not currently used
        notifications:
          aws_cleaner/notifications/1: 15
          aws_cleaner/notifications/2: 7
          aws_cleaner/notifications/3: 2


notify_messages:
  ADD_ACTION_DATE: "Added {action} date to {state} {instance_type} instance '{instance_name}' [`{region}`/`{instance_id}`], set to *{new_date}* (tag `[{tag}]`)"
  RESET_ACTION_DATE: "Updating {state} {instance_type} instance '{instance_name}' [`{region}`/`{instance_id}`]: {action} date changed from {old_date} to *{new_date}* (tag `[{tag}]`)"
  COMPLETE_ACTION: "Completed {action} on {state} {instance_type} instance '{instance_name}' [`{region}`/`{instance_id}`] (tag `[{tag}]`)"
  TRANSITION_ACTION: "Initial notification: will {action} {state} {instance_type} instance '{instance_name}' [`{region}`/`{instance_id}`] on *{new_date}* (tag `[{tag}]`)"
  PAST_BUMP_NOTIFICATION: "Notification #__N__ for {state} {instance_type} instance '{instance_name}' [`{region}`/`{instance_id}`]: will {action} on *{new_date}* (previously set to *{old_date}*) (tag `[{tag}]`)"
  SEND_NOTIFICATION: "Notification #__N__ for {state} {instance_type} instance '{instance_name}' [`{region}`/`{instance_id}`]: will {action} on *{new_date}* (tag `[{tag}]`)"
  LOG_NO_NOTIFICATION: "Will {action} {state} {instance_type} instance '{instance_name}' [`{region}`/`{instance_id}`] on *{new_date}* (tag `[{tag}]`)"
  IGNORE_OTHER_STATES: "Ignoring {state} {instance_type} {instance_name} [`{region}`/`{instance_id}`] because its state is {state}"
  # Not currently passing in exception value, because it would require adding a different passed-in parameters to NOTIFY_MESSAGES
  SKIP_EXCEPTION: "Skipping {state} {instance_type} instance '{instance_name}' [`{region}`/`{instance_id}`] because it has {tag} set to {new_date}"
  # IGNORE_ASG: "Ignoring {instance_type} {instance_name} [`{region}`/`{instance_id}`] because it is in autoscaling group {tag}"
